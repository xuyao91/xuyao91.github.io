<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[深不可测]]></title>
  <link href="http://xuyao.club/atom.xml" rel="self"/>
  <link href="http://xuyao.club/"/>
  <updated>2016-08-07T15:36:18+08:00</updated>
  <id>http://xuyao.club/</id>
  <author>
    <name><![CDATA[Peter Xu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[App自动化测试平台搭建记录之rspec与appium的完美组合]]></title>
    <link href="http://xuyao.club/blog/2016/08/04/app-test-automation-platform-building-record-of-rspec-and-appium/"/>
    <updated>2016-08-04T18:31:04+08:00</updated>
    <id>http://xuyao.club/blog/2016/08/04/app-test-automation-platform-building-record-of-rspec-and-appium</id>
    <content type="html"><![CDATA[<p>我们的预期目标是每天定时跑测试代码，并生成相应的测试报告，所以这里需要一个比较完善的测试框架来做这些事情，这里我选择的是rspec，</p>

<h4>rspec与appium组合</h4>

<ul>
<li>将app(ios和android)端每个页面封装成自己的类，页面中的每个控件实例成方法，使用到哪个页面只需将对应的类初始化一下。</li>
<li>写测试用例的人员只需写对应的测试用例，而不需要关注每个页面的控件封闭，而写控件封装的人，则只需写类的封装，也不必关注测试用例，这样极大的提高了开发效率</li>
<li>考虑到ios与android中大部分页面的控件以及逻辑都是一样的，所以针对ios和android测试，spec代码只需写一份，这样做的好处是将测试用例与逻辑代码分离，便于以后维护，同时测试用例的扩展性和重用性也大大得到的提高</li>
</ul>


<h4>（页面）类的封装</h4>

<p>测试开发流程具体如下，以app上的添加亲友为例
<img src="http://7xjibn.com1.z0.glb.clouddn.com/Screenshot_2016-08-06-17-58-40_com.yydys.png" alt="img" />
可以看到添加亲友页面上有4个控件，那么可以将这个页面封装成一个类，这些控件就是对应的实例方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#android对应的类</span>
</span><span class='line'><span class="k">module</span> <span class="nn">Simulator</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Android</span>
</span><span class='line'>    <span class="k">module</span> <span class="nn">Pages</span>
</span><span class='line'>      <span class="k">module</span> <span class="nn">Patient</span>
</span><span class='line'>        <span class="k">class</span> <span class="nc">AddRelative</span> <span class="o">&lt;</span> <span class="no">Simulator</span><span class="o">::</span><span class="no">Android</span><span class="o">::</span><span class="no">Pages</span><span class="o">::</span><span class="no">Patient</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nf">my_relatives_link</span>
</span><span class='line'>            <span class="n">text</span><span class="p">(</span><span class="s2">&quot;我的亲友&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nf">add_relative_button</span>
</span><span class='line'>            <span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="s2">&quot;com.yydys:id/add_folks&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nf">relative_select</span>
</span><span class='line'>            <span class="c1">#text(&quot;是你的&quot;)</span>
</span><span class='line'>            <span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="s2">&quot;com.yydys:id/role_name&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nf">name_option_selected</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;爸爸&quot;</span>
</span><span class='line'>            <span class="n">text</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nf">mobile_num_text_field</span>
</span><span class='line'>            <span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="s2">&quot;com.yydys:id/mobile&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nf">glucose_sms_reminder</span>
</span><span class='line'>            <span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="s2">&quot;com.yydys:id/glucose_exception_togglebtn&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nf">medicine_sms_reminder</span>
</span><span class='line'>            <span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="s2">&quot;com.yydys:id/forget_medication_togglebtn&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nf">save_button</span>
</span><span class='line'>            <span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="s2">&quot;com.yydys:id/right_btn&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">#ios对应的类</span>
</span><span class='line'><span class="k">module</span> <span class="nn">Simulator</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Ios</span>
</span><span class='line'>    <span class="k">module</span> <span class="nn">Pages</span>
</span><span class='line'>      <span class="k">module</span> <span class="nn">Patient</span>
</span><span class='line'>        <span class="k">class</span> <span class="nc">AddRelative</span> <span class="o">&lt;</span> <span class="no">Simulator</span><span class="o">::</span><span class="no">Ios</span><span class="o">::</span><span class="no">Pages</span><span class="o">::</span><span class="no">Patient</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>          <span class="k">def</span> <span class="nf">my_relatives_link</span>
</span><span class='line'>            <span class="n">text</span><span class="p">(</span><span class="s2">&quot;我的亲友&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nf">add_relative_button</span>
</span><span class='line'>            <span class="n">button_exact</span><span class="p">(</span><span class="s2">&quot;添加亲友&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nf">relative_select</span>
</span><span class='line'>            <span class="n">text</span><span class="p">(</span><span class="s2">&quot;是您的&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nf">name_option_selected</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;爸爸&quot;</span>
</span><span class='line'>            <span class="n">text</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nf">mobile_num_text_field</span>
</span><span class='line'>            <span class="n">textfield_exact</span><span class="p">(</span><span class="s2">&quot;请输入手机号&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nf">glucose_sms_reminder</span>
</span><span class='line'>            <span class="n">find</span><span class="p">(</span><span class="ss">xpath</span><span class="p">:</span> <span class="s2">&quot;//UIAApplication[1]/UIAWindow[1]/UIATableView[1]/UIATableCell[3]/UIASwitch[1]&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nf">medicine_sms_reminder</span>
</span><span class='line'>            <span class="n">find</span><span class="p">(</span><span class="ss">xpath</span><span class="p">:</span> <span class="s2">&quot;//UIAApplication[1]/UIAWindow[1]/UIATableView[1]/UIATableCell[3]/UIASwitch[2]&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nf">save_button</span>
</span><span class='line'>            <span class="n">button_exact</span><span class="p">(</span><span class="s2">&quot;保存&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="c1">#find(xpath: &quot;//UIAApplication[1]/UIAWindow[1]/UIATableView[1]/UIATableCell[4]/UIASwitch[1]&quot;)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nf">return_button</span>
</span><span class='line'>            <span class="n">button_exact</span><span class="p">(</span><span class="s2">&quot;返回&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到对应页面上的每个控件，ios和android都会有自己的封闭方法，这样做提高了代码的重用性，与测试代码分离，便于以后维护</p>

<h4>测试用例</h4>

<p>上面说道一般ios和android页面上的控件是一样的，所以正常情况下，我们只需写一份测试代码就可以，但是ios和android的测试代码还是要分开跑的，所以这里我引用了rpsec的<a href="http://rspec.info/documentation/3.5/rspec-core/#Shared_Examples_and_Contexts">share_example</a>来做</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#android的测试用例</span>
</span><span class='line'><span class="n">require_relative</span> <span class="s1">&#39;../../../shared/patient/v1/add_relative_spec&#39;</span>
</span><span class='line'><span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="s2">&quot;AddRelative   &quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">include_examples</span> <span class="s2">&quot;share_add_relative&quot;</span>  <span class="p">,</span> <span class="s2">&quot;android&quot;</span>
</span><span class='line'><span class="k">end</span>    
</span><span class='line'>
</span><span class='line'><span class="c1">#ios的测试用例</span>
</span><span class='line'><span class="n">require_relative</span> <span class="s1">&#39;../../../shared/patient/v1/add_relative_spec&#39;</span>
</span><span class='line'><span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="s2">&quot;AddRelative&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">include_examples</span> <span class="s2">&quot;share_add_relative&quot;</span>  <span class="p">,</span> <span class="s2">&quot;ios&quot;</span>
</span><span class='line'><span class="k">end</span>    
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">#shared部分</span>
</span><span class='line'><span class="n">require_relative</span> <span class="s1">&#39;../../../spec_helper&#39;</span>
</span><span class='line'><span class="no">RSpec</span><span class="o">.</span><span class="n">shared_examples</span> <span class="s2">&quot;share_add_relative&quot;</span> <span class="k">do</span> <span class="o">|</span><span class="n">device</span><span class="o">|</span>
</span><span class='line'>  <span class="n">before</span><span class="p">(</span><span class="ss">:all</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">login</span> <span class="n">device</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">#Appium.promote_appium_methods Object</span>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;add relative&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="k">begin</span>
</span><span class='line'>              <span class="nb">sleep</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span>
</span><span class='line'>          <span class="n">wait</span> <span class="p">{</span><span class="n">add_relative_page</span><span class="o">.</span><span class="n">user_center_bar</span><span class="o">.</span><span class="n">click</span><span class="p">}</span>
</span><span class='line'>          <span class="n">wait</span> <span class="p">{</span><span class="n">add_relative_page</span><span class="o">.</span><span class="n">my_relatives_link</span><span class="o">.</span><span class="n">click</span><span class="p">}</span>
</span><span class='line'>          <span class="n">wait</span> <span class="p">{</span><span class="n">add_relative_page</span><span class="o">.</span><span class="n">add_relative_button</span><span class="o">.</span><span class="n">click</span><span class="p">}</span>
</span><span class='line'>          <span class="k">if</span> <span class="vi">@device</span><span class="o">.</span><span class="n">appium_device</span> <span class="o">==</span>  <span class="ss">:android</span>
</span><span class='line'>              <span class="n">wait</span> <span class="p">{</span><span class="n">add_relative_page</span><span class="o">.</span><span class="n">relative_select</span><span class="o">.</span><span class="n">click</span><span class="p">}</span>
</span><span class='line'>              <span class="n">wait</span> <span class="p">{</span><span class="n">add_relative_page</span><span class="o">.</span><span class="n">name_option_selected</span><span class="p">(</span><span class="s2">&quot;爸爸&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span><span class="p">}</span>
</span><span class='line'>          <span class="k">else</span>
</span><span class='line'>              <span class="n">wait</span> <span class="p">{</span><span class="n">add_relative_page</span><span class="o">.</span><span class="n">relative_select</span><span class="o">.</span><span class="n">click</span><span class="p">}</span>
</span><span class='line'>              <span class="n">wait</span> <span class="p">{</span><span class="n">add_relative_page</span><span class="o">.</span><span class="n">return_button</span><span class="o">.</span><span class="n">click</span><span class="p">}</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">wait</span> <span class="p">{</span><span class="n">add_relative_page</span><span class="o">.</span><span class="n">mobile_num_text_field</span><span class="o">.</span><span class="n">type</span><span class="p">(</span><span class="s2">&quot;13524836959&quot;</span><span class="p">)}</span>
</span><span class='line'>          <span class="k">if</span> <span class="vi">@device</span><span class="o">.</span><span class="n">appium_device</span> <span class="o">==</span>  <span class="ss">:android</span>
</span><span class='line'>              <span class="c1">#screen = wait {add_relative_page.boot_screen}</span>
</span><span class='line'>              <span class="c1">#size = screen.window_size</span>
</span><span class='line'>              <span class="c1">#start_x, end_x, start_y, end_y = size.width - 5, size.width/100, size.height/2, size.height/2</span>
</span><span class='line'>              <span class="c1">#wait {exists{swipe(start_x:start_x,start_y:start_y, end_x:end_x,end_y:end_y, duration:1000)}}</span>
</span><span class='line'>          <span class="k">else</span>
</span><span class='line'>              <span class="n">wait</span> <span class="p">{</span><span class="n">add_relative_page</span><span class="o">.</span><span class="n">glucose_sms_reminder</span><span class="o">.</span><span class="n">click</span><span class="p">}</span>
</span><span class='line'>              <span class="c1">#wait {add_relative_page.medicine_sms_reminder.click}</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>          <span class="c1">#wait {add_relative_page.glucose_sms_reminder.}</span>
</span><span class='line'>          <span class="c1">#wait {add_relative_page.mobile_num_text_field.type(&quot;11000009123&quot;)}</span>
</span><span class='line'>          <span class="n">wait</span> <span class="p">{</span><span class="n">add_relative_page</span><span class="o">.</span><span class="n">save_button</span><span class="o">.</span><span class="n">click</span><span class="p">}</span>
</span><span class='line'>          <span class="n">expect</span><span class="p">(</span><span class="n">exists</span><span class="p">{</span><span class="n">add_relative_page</span><span class="o">.</span><span class="n">add_relative_button</span><span class="p">})</span><span class="o">.</span><span class="n">to</span> <span class="n">be_truthy</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>          <span class="nb">puts</span> <span class="n">e</span><span class="o">.</span><span class="n">message</span>
</span><span class='line'>          <span class="vi">@driver</span><span class="o">.</span><span class="n">quit</span> <span class="k">if</span> <span class="vi">@driver</span>
</span><span class='line'>          <span class="k">raise</span> <span class="n">e</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">after</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@driver</span><span class="o">.</span><span class="n">quit</span> <span class="k">if</span> <span class="vi">@driver</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到写测试用例的人员，不必关注底层控件的封装，只需按正常逻辑写测试用例就可</p>

<h4>测试报告</h4>

<p><img src="http://7xjibn.com1.z0.glb.clouddn.com/C8EA5B20-316A-45CB-A950-5F393B4AEC85.png" alt="img" /></p>

<h4>未完成的工作</h4>

<ul>
<li>配置jenkins，使其每天定时打包最新的代码</li>
<li>动态数据的载入</li>
<li>不同app版本的测试</li>
<li>混合，h5页面的测试</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[App自动化测试平台搭建记录之如何优雅地找到控件]]></title>
    <link href="http://xuyao.club/blog/2016/07/10/app-test-automation-platform-building-record-of-how-to-find-the-ui/"/>
    <updated>2016-07-10T22:22:44+08:00</updated>
    <id>http://xuyao.club/blog/2016/07/10/app-test-automation-platform-building-record-of-how-to-find-the-ui</id>
    <content type="html"><![CDATA[<p>这篇讲一下如果找到对应ios/android里的UI控件，以便我们快速地写测试代码，本系列文章未特殊提到使用什么语言时，默认使用ruby脚本语言。ios/android设备的UI控件有很多种，下面讲一下使用appium Inspector和appium ruby console(arc)来查找UI控件</p>

<!-- more -->


<h4>Appium Inspector GUI</h4>

<p>appium服务启动后，点击inspector,启动client GUI，如下图,GUI已帮我们获取到所有的Ui控件，并且有很多模拟操作，非常适合我们调试用，点击record，每个模拟操作都会生成相应的代码，而且代码还可以选择你需要的语言版本。
<img src="http://7xjibn.com1.z0.glb.clouddn.com/android_detail.png" alt="android_detail" />
<img src="http://7xjibn.com1.z0.glb.clouddn.com/android_record.png" alt="android_record" /><br/>
我们具体定位到某个控件，可以看到这个控件的详细信息，比如我现在找到一个登录按钮，下面是这个登录按钮的信息</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#android某个控件的详细信息</span>
</span><span class='line'><span class="n">content</span><span class="o">-</span><span class="ss">desc</span><span class="p">:</span>
</span><span class='line'><span class="ss">type</span><span class="p">:</span> <span class="n">android</span><span class="o">.</span><span class="n">widget</span><span class="o">.</span><span class="n">Button</span>
</span><span class='line'><span class="ss">text</span><span class="p">:</span> <span class="err">登录</span>
</span><span class='line'><span class="ss">index</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'><span class="ss">enabled</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="ss">location</span><span class="p">:</span> <span class="p">{</span><span class="mi">418</span><span class="p">,</span> <span class="mi">1054</span><span class="p">}</span>
</span><span class='line'><span class="ss">size</span><span class="p">:</span> <span class="p">{</span><span class="mi">262</span><span class="p">,</span> <span class="mi">89</span><span class="p">}</span>
</span><span class='line'><span class="ss">checkable</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="ss">checked</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="ss">focusable</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="ss">clickable</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="n">long</span><span class="o">-</span><span class="ss">clickable</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="ss">package</span><span class="p">:</span> <span class="n">com</span><span class="o">.</span><span class="n">yydys</span>
</span><span class='line'><span class="ss">password</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="n">resource</span><span class="o">-</span><span class="nb">id</span><span class="p">:</span> <span class="n">com</span><span class="o">.</span><span class="n">yydys</span><span class="ss">:id</span><span class="o">/</span><span class="n">immediate_experience</span>
</span><span class='line'><span class="ss">scrollable</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="ss">selected</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="ss">xpath</span><span class="p">:</span> <span class="sr">//</span><span class="n">android</span><span class="o">.</span><span class="n">widget</span><span class="o">.</span><span class="n">LinearLayout</span><span class="o">[</span><span class="mi">1</span><span class="o">]/</span><span class="n">android</span><span class="o">.</span><span class="n">widget</span><span class="o">.</span><span class="n">FrameLayout</span><span class="o">[</span><span class="mi">1</span><span class="o">]/</span><span class="n">android</span><span class="o">.</span><span class="n">widget</span><span class="o">.</span><span class="n">LinearLayout</span><span class="o">[</span><span class="mi">1</span><span class="o">]/</span><span class="n">android</span><span class="o">.</span><span class="n">widget</span><span class="o">.</span><span class="n">LinearLayout</span><span class="o">[</span><span class="mi">1</span><span class="o">]/</span><span class="n">android</span><span class="o">.</span><span class="n">widget</span><span class="o">.</span><span class="n">LinearLayout</span><span class="o">[</span><span class="mi">2</span><span class="o">]/</span><span class="n">android</span><span class="o">.</span><span class="n">widget</span><span class="o">.</span><span class="n">Button</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#ios某个控件下的详情信息</span>
</span><span class='line'><span class="nb">name</span><span class="p">:</span> <span class="err">登录</span>
</span><span class='line'><span class="ss">type</span><span class="p">:</span> <span class="no">UIAButton</span>
</span><span class='line'><span class="ss">value</span><span class="p">:</span>
</span><span class='line'><span class="ss">label</span><span class="p">:</span> <span class="err">登录</span>
</span><span class='line'><span class="ss">hint</span><span class="p">:</span>
</span><span class='line'><span class="ss">enabled</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="ss">visible</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="ss">valid</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="ss">location</span><span class="p">:</span> <span class="p">{</span><span class="mi">192</span><span class="o">.</span><span class="mi">5</span><span class="p">,</span> <span class="mi">575</span><span class="p">}</span>
</span><span class='line'><span class="ss">size</span><span class="p">:</span> <span class="p">{</span><span class="mi">167</span><span class="o">.</span><span class="mi">5</span><span class="p">,</span> <span class="mi">44</span><span class="p">}</span>
</span><span class='line'><span class="ss">xpath</span><span class="p">:</span> <span class="sr">//</span><span class="no">UIAApplication</span><span class="o">[</span><span class="mi">1</span><span class="o">]/</span><span class="no">UIAWindow</span><span class="o">[</span><span class="mi">2</span><span class="o">]/</span><span class="no">UIAScrollView</span><span class="o">[</span><span class="mi">1</span><span class="o">]/</span><span class="no">UIAButton</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h4>appium ruby console(arc)</h4>

<p><a href="https://github.com/appium/ruby_console">ruby_console</a>是针对ruby打造的一个console端的gem，使用起来也很方便，直接在console里使用命令arc就能启动设备，不过他并不能读取我们在appium里面的配置信息，所以需要我们手动创建一个appium.txt文件，在此文件目录下面启动，下面的android/ios的appium.txt文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#android</span>
</span><span class='line'><span class="o">[</span><span class="n">caps</span><span class="o">]</span>
</span><span class='line'><span class="n">platformName</span> <span class="o">=</span> <span class="s2">&quot;Android&quot;</span>
</span><span class='line'><span class="n">platformVersion</span> <span class="o">=</span> <span class="s1">&#39;5.1&#39;</span>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="s2">&quot;/Users/xuyao/Downloads/Yydys0627.apk&quot;</span>
</span><span class='line'><span class="n">deviceName</span> <span class="o">=</span> <span class="s2">&quot;Android Simulator&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">#ios</span>
</span><span class='line'><span class="o">[</span><span class="n">caps</span><span class="o">]</span>
</span><span class='line'><span class="n">platformName</span> <span class="o">=</span> <span class="s2">&quot;ios&quot;</span>
</span><span class='line'><span class="n">platformVersion</span> <span class="o">=</span> <span class="s1">&#39;8.2&#39;</span>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="s2">&quot;/Users/xuyao/Downloads/Cloudoc-Patient.app&quot;</span>
</span><span class='line'><span class="n">deviceName</span> <span class="o">=</span> <span class="s2">&quot;iPhone Simulator&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#启动arc</span>
</span><span class='line'><span class="err">➜</span> <span class="n">ls</span>
</span><span class='line'><span class="n">appium</span><span class="o">.</span><span class="n">txt</span>
</span><span class='line'><span class="err">➜</span> <span class="n">arc</span>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>启动后，我们可以通过page方法查看当前页面所有的元素</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">4</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">page</span>
</span><span class='line'>
</span><span class='line'><span class="n">android</span><span class="o">.</span><span class="n">widget</span><span class="o">.</span><span class="n">FrameLayout</span> <span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">id</span><span class="p">:</span> <span class="ss">android</span><span class="p">:</span><span class="nb">id</span><span class="o">/</span><span class="n">content</span>
</span><span class='line'>
</span><span class='line'><span class="n">android</span><span class="o">.</span><span class="n">support</span><span class="o">.</span><span class="n">v4</span><span class="o">.</span><span class="n">view</span><span class="o">.</span><span class="n">ViewPager</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">id</span><span class="p">:</span> <span class="n">com</span><span class="o">.</span><span class="n">yydys</span><span class="ss">:id</span><span class="o">/</span><span class="n">vp_welcome</span>
</span><span class='line'>
</span><span class='line'><span class="n">android</span><span class="o">.</span><span class="n">widget</span><span class="o">.</span><span class="n">ImageView</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">id</span><span class="p">:</span> <span class="n">com</span><span class="o">.</span><span class="n">yydys</span><span class="ss">:id</span><span class="o">/</span><span class="n">wel_img</span>
</span><span class='line'>
</span><span class='line'><span class="n">android</span><span class="o">.</span><span class="n">widget</span><span class="o">.</span><span class="n">Button</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="ss">text</span><span class="p">:</span> <span class="err">逛一逛</span>
</span><span class='line'>  <span class="nb">id</span><span class="p">:</span> <span class="n">com</span><span class="o">.</span><span class="n">yydys</span><span class="ss">:id</span><span class="o">/</span><span class="n">direct_access</span>
</span><span class='line'>  <span class="n">strings</span><span class="o">.</span><span class="n">xml</span><span class="p">:</span> <span class="n">direct_access</span>
</span><span class='line'>
</span><span class='line'><span class="n">android</span><span class="o">.</span><span class="n">widget</span><span class="o">.</span><span class="n">Button</span> <span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="ss">text</span><span class="p">:</span> <span class="err">登录</span>
</span><span class='line'>  <span class="nb">id</span><span class="p">:</span> <span class="n">com</span><span class="o">.</span><span class="n">yydys</span><span class="ss">:id</span><span class="o">/</span><span class="n">immediate_experience</span>
</span><span class='line'>  <span class="n">strings</span><span class="o">.</span><span class="n">xml</span><span class="p">:</span> <span class="n">immediate_experience</span>
</span><span class='line'>               <span class="n">login</span>
</span><span class='line'><span class="kp">nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果觉得页面信息很多，找不到自己想要的控件，page方法后面可以带个参数class_name来过滤元素，如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">5</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">page</span> <span class="ss">:Button</span>
</span><span class='line'>
</span><span class='line'><span class="n">android</span><span class="o">.</span><span class="n">widget</span><span class="o">.</span><span class="n">Button</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="ss">text</span><span class="p">:</span> <span class="err">逛一逛</span>
</span><span class='line'>  <span class="nb">id</span><span class="p">:</span> <span class="n">com</span><span class="o">.</span><span class="n">yydys</span><span class="ss">:id</span><span class="o">/</span><span class="n">direct_access</span>
</span><span class='line'>  <span class="n">strings</span><span class="o">.</span><span class="n">xml</span><span class="p">:</span> <span class="n">direct_access</span>
</span><span class='line'>
</span><span class='line'><span class="n">android</span><span class="o">.</span><span class="n">widget</span><span class="o">.</span><span class="n">Button</span> <span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="ss">text</span><span class="p">:</span> <span class="err">登录</span>
</span><span class='line'>  <span class="nb">id</span><span class="p">:</span> <span class="n">com</span><span class="o">.</span><span class="n">yydys</span><span class="ss">:id</span><span class="o">/</span><span class="n">immediate_experience</span>
</span><span class='line'>  <span class="n">strings</span><span class="o">.</span><span class="n">xml</span><span class="p">:</span> <span class="n">immediate_experience</span>
</span><span class='line'>               <span class="n">login</span>
</span><span class='line'><span class="kp">nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样就能找到按钮的元素了</p>

<h6>find_element()方法</h6>

<p>根据上面的信息我们可以通过find_elment方法来查找android/ios下的xpath,模拟点击操作</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#android</span>
</span><span class='line'><span class="n">find_element</span><span class="p">(</span><span class="ss">xpath</span><span class="p">:</span> <span class="s2">&quot;//android.widget.LinearLayout[1]/android.widget.FrameLayout[1]/android.widget.LinearLayout[1]/android.widget.LinearLayout[1]/android.widget.LinearLayout[2]/android.widget.Button[2]&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'><span class="c1">#android我们还可以根据他的recource-id，来查找他的唯一控件</span>
</span><span class='line'><span class="n">find_element</span><span class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="s2">&quot;com.yydys:id/immediate_experience&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'><span class="c1">#ios</span>
</span><span class='line'><span class="n">find_element</span><span class="p">(</span><span class="ss">xpath</span><span class="p">:</span> <span class="s2">&quot;//UIAApplication[1]/UIAWindow[2]/UIAScrollView[1]/UIAButton[2]&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'><span class="c1">#当然你也可以通过class_name来查找，如果一个页面上有多个相同的class_name,会返回第一个tag</span>
</span><span class='line'><span class="n">find_element</span><span class="p">(</span><span class="ss">class_name</span><span class="p">:</span> <span class="s2">&quot;android.widget.Button&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>  <span class="c1">#android</span>
</span><span class='line'><span class="n">find_element</span><span class="p">(</span><span class="ss">class_name</span><span class="p">:</span> <span class="s2">&quot;UIAButton&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span></code></pre></td></tr></table></div></figure>


<h6>button_exact方法</h6>

<p>有时候我们知道要找一个按钮，那么我们可以使用button_exact来直接查找一个button,button_exact方法会找到第一个配置到的元素</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">8</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">button_exact</span><span class="p">(</span><span class="s2">&quot;登录&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1">#&lt;Selenium::WebDriver::Element:0x5dffe05a97580bc2 id=&quot;3&quot;&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h6>textfield_exact()方法</h6>

<p>根据给定的值找到EditText/TextFeild第一个元素</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">24</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">textfield_exact</span><span class="p">(</span><span class="s2">&quot;com.yydys:id/login_input&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">type</span> <span class="s2">&quot;9123&quot;</span>
</span><span class='line'><span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<h6>exists()方法</h6>

<p>测试的时候一般需要判断某个元素是否存在，可以使用exists</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">40</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">exists</span><span class="p">{</span><span class="n">button_exact</span><span class="p">(</span><span class="s2">&quot;com.yydys:id/login_btn&quot;</span><span class="p">)}</span>
</span><span class='line'><span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上就是一些比较常用的方法，以后用到再更新一些新的方法</p>

<h5>参考资料</h5>

<p><a href="https://github.com/appium/ruby_lib/blob/master/docs/android_docs.md">https://github.com/appium/ruby_lib/blob/master/docs/android_docs.md</a><br/>
<a href="https://github.com/appium/ruby_lib/blob/master/docs/ios_docs.md">https://github.com/appium/ruby_lib/blob/master/docs/ios_docs.md</a><br/>
<a href="https://ruby-china.org/topics/30154">https://ruby-china.org/topics/30154</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[App自动化测试平台搭建记录之Android模拟器/真机的配置]]></title>
    <link href="http://xuyao.club/blog/2016/07/10/app-test-automation-platform-building-record-of-how-to-setting-android-config/"/>
    <updated>2016-07-10T00:12:30+08:00</updated>
    <id>http://xuyao.club/blog/2016/07/10/app-test-automation-platform-building-record-of-how-to-setting-android-config</id>
    <content type="html"><![CDATA[<p>上一篇讲了安装appium及ios的配置，如果没看过这篇文章，建议先看一下，<a href="http://www.jianshu.com/p/8ac5491436b2">传送门</a>
既然是配置Android模拟器，那么Java和Android sdk的安装是必不可少的了</p>

<!-- more -->


<h4>安装Java环境</h4>

<p>安装Java环境就不多讲了，大家各显神通吧</p>

<h4>安装Android SDK</h4>

<p>到Android<a href="https://developer.android.com/studio/index.html">官网</a>，下载一个mac版的sdk,解压出来
进入tools文件夹，执行android文件，出现如下界面，选择需要安装的版本
<img src="http://7xjibn.com1.z0.glb.clouddn.com/android_sdk_download.png" alt="android_sdk_download" />
下载完成后,进入android sdk目录下面执行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">android</span> <span class="n">avd</span>
</span></code></pre></td></tr></table></div></figure>


<p>打开android avd管理界面，添加一个avd设备
<img src="http://7xjibn.com1.z0.glb.clouddn.com/avd_manger.png" alt="avd_manger" />
<img src="http://7xjibn.com1.z0.glb.clouddn.com/create_avd.png" alt="create_avd" />
新建完成后，可以启动看一下android 虚拟设备<br/>
最后进入platform-tools使用命令，查看当前的android可用设备
如果是真机测试的话，使用USB线连接电脑，打开开发者模式，同意此电脑连接设备，appium启动时,会查找当前可用的android设备</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">adb</span> <span class="n">devices</span>
</span><span class='line'><span class="c1">#这里会显示当前可用的android设备</span>
</span><span class='line'><span class="no">List</span> <span class="n">of</span> <span class="n">devices</span> <span class="n">attached</span>
</span><span class='line'><span class="mi">88</span><span class="no">EKBME225K8</span>  <span class="n">device</span>
</span></code></pre></td></tr></table></div></figure>


<p>最后配置环境变量，环境变量包括JAVA_HOME和ANDROID_HOME
编辑.profile（如果安装了zshrc，应该是.zshrc）
添加以下代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">export</span> <span class="no">ANDROID_HOME</span><span class="o">=</span><span class="sr">/Users/xu</span><span class="n">yao</span><span class="o">/</span><span class="no">Downloads</span><span class="o">/</span><span class="n">android</span><span class="o">-</span><span class="n">sdk</span><span class="o">-</span><span class="n">macosx</span>
</span><span class='line'><span class="n">export</span> <span class="no">JAVA_HOME</span><span class="o">=</span><span class="sr">/Library/</span><span class="no">Java</span><span class="o">/</span><span class="no">JavaVirtualMachines</span><span class="o">/</span><span class="n">jdk1</span><span class="o">.</span><span class="mi">8</span><span class="o">.</span><span class="mo">0_71</span><span class="o">.</span><span class="n">jdk</span><span class="o">/</span><span class="no">Contents</span><span class="o">/</span><span class="no">Home</span>
</span><span class='line'><span class="no">PATH</span><span class="o">=</span><span class="vg">$PATH</span><span class="ss">:/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">npm</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span>
</span><span class='line'><span class="no">PATH</span><span class="o">=</span><span class="vg">$PATH</span><span class="p">:</span><span class="vg">$ANDROID_HOME</span><span class="o">/</span><span class="n">build</span><span class="o">-</span><span class="n">tools</span>
</span><span class='line'><span class="no">PATH</span><span class="o">=</span><span class="vg">$PATH</span><span class="p">:</span><span class="vg">$ANDROID_HOME</span><span class="o">/</span><span class="n">platform</span><span class="o">-</span><span class="n">tools</span>
</span><span class='line'><span class="no">PATH</span><span class="o">=</span><span class="vg">$PATH</span><span class="p">:</span><span class="vg">$ANDROID_HOME</span><span class="o">/</span><span class="n">tools</span>
</span><span class='line'><span class="n">export</span> <span class="no">PATH</span>
</span></code></pre></td></tr></table></div></figure>


<p> <br/>
保存后，为使其生效，需要重新sources一下,source .profile(.zshrc)<br/>
输出一下，检查是否成功</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">echo</span> <span class="vg">$ANDROID_HOME</span>
</span><span class='line'><span class="sr">/Users/xu</span><span class="n">yao</span><span class="o">/</span><span class="no">Downloads</span><span class="o">/</span><span class="n">android</span><span class="o">-</span><span class="n">sdk</span><span class="o">-</span><span class="n">macosx</span>
</span><span class='line'><span class="n">echo</span> <span class="vg">$JAVA_HOME</span>
</span><span class='line'><span class="sr">/Library/</span><span class="no">Java</span><span class="o">/</span><span class="no">JavaVirtualMachines</span><span class="o">/</span><span class="n">jdk1</span><span class="o">.</span><span class="mi">8</span><span class="o">.</span><span class="mo">0_71</span><span class="o">.</span><span class="n">jdk</span><span class="o">/</span><span class="no">Contents</span><span class="o">/</span><span class="no">Home</span>
</span></code></pre></td></tr></table></div></figure>


<p>一切准备就绪，接下来就开始在appium里配置android信息了
<img src="http://7xjibn.com1.z0.glb.clouddn.com/android_config.png" alt="android_config" />
platform Versiont选择的时候，如果是真机测试时，确定所选版本和机子上的android版本一样，否则会报错。
配置完成后，接下来就是启动server和client,这里的步骤一ios是一样的，具体可查看上一篇文章，截一个android版本的client启动成功的Inspector gui的图
<img src="http://7xjibn.com1.z0.glb.clouddn.com/android_inspect.png" alt="img" /></p>

<h6>注意的地方</h6>

<p>如果启动client的时候报下面的错</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="no">MJSONWP</span><span class="o">]</span> <span class="no">Encountered</span> <span class="n">internal</span> <span class="n">error</span> <span class="n">running</span> <span class="ss">command</span><span class="p">:</span> <span class="ss">Error</span><span class="p">:</span> <span class="no">Could</span> <span class="ow">not</span> <span class="n">find</span> <span class="n">a</span> <span class="n">connected</span> <span class="no">Android</span> <span class="n">device</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>说明client端找不到可以连接的android设备，检查一下avd是否启动或者真机连接是否正确</p>

<h6>参考资料</h6>

<p><a href="https://developer.android.com/studio/index.html">https://developer.android.com/studio/index.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[App自动化测试平台搭建记录之appium安装及ios模拟器/真机的配置]]></title>
    <link href="http://xuyao.club/blog/2016/07/09/app-test-automation-platform-building-record-of-how-to-install-appium-and-setting-ios-config/"/>
    <updated>2016-07-09T21:29:56+08:00</updated>
    <id>http://xuyao.club/blog/2016/07/09/app-test-automation-platform-building-record-of-how-to-install-appium-and-setting-ios-config</id>
    <content type="html"><![CDATA[<p>上一篇讲了什么是appium，这次讲一下如何安装appium，及怎样配置ios/android的模拟器/真机</p>

<h4>系统选择</h4>

<p>因为要跑ios的包的，所以我们肯定需要apple的系统来支持，而且ios版的appium也支持android，这样就完美了。</p>

<!-- more -->


<h6>iOS必备条件</h6>

<ul>
<li>Mac OS X 10.10 or 更高, 建议使用10.11.1</li>
<li>XCode >= 6.0, 7.1.1</li>
<li>Apple Developer Tools (iPhone simulator SDK, command line tools)</li>
</ul>


<h6>Android必备条件</h6>

<ul>
<li><a href="http://developer.android.com/">Android SDK</a> API >= 17 (Additional features require 18/19)</li>
</ul>


<h4>安装appium</h4>

<p>appium服务器是使用node.js跑的,所以要确保你机子上安装了node.js</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">brew</span> <span class="n">install</span> <span class="n">node</span> <span class="c1">#安装nodejs</span>
</span><span class='line'><span class="n">npm</span> <span class="n">install</span> <span class="o">-</span><span class="n">g</span> <span class="n">appium</span> <span class="c1">#安装appium</span>
</span><span class='line'><span class="n">appium</span>  <span class="c1">#启动appium</span>
</span></code></pre></td></tr></table></div></figure>


<p>当然你还可以下载一个包，直接安装，<a href="https://bitbucket.org/appium/appium.app/downloads/">点击下载</a>
如果不确实appium是否安装好，可以使用appium-doctor插件检测依赖环境是否安装成功</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">npm</span> <span class="n">install</span> <span class="o">-</span><span class="n">g</span> <span class="n">appium</span><span class="o">-</span><span class="n">doctor</span> <span class="c1"># 安装appium-doctor</span>
</span><span class='line'><span class="n">appium</span><span class="o">-</span><span class="n">doctor</span> <span class="c1">#如果安装成功，会显示以下数据</span>
</span><span class='line'><span class="n">info</span> <span class="no">AppiumDoctor</span> <span class="c1">### Diagnostic starting ###</span>
</span><span class='line'><span class="n">info</span> <span class="no">AppiumDoctor</span>  <span class="err">✔</span> <span class="no">Xcode</span> <span class="n">is</span> <span class="n">installed</span> <span class="ss">at</span><span class="p">:</span> <span class="sr">/Applications/</span><span class="no">Xcode</span><span class="o">.</span><span class="n">app</span><span class="o">/</span><span class="no">Contents</span><span class="o">/</span><span class="no">Developer</span>
</span><span class='line'><span class="n">info</span> <span class="no">AppiumDoctor</span>  <span class="err">✔</span> <span class="no">Xcode</span> <span class="no">Command</span> <span class="no">Line</span> <span class="no">Tools</span> <span class="n">are</span> <span class="n">installed</span><span class="o">.</span>
</span><span class='line'><span class="n">info</span> <span class="no">AppiumDoctor</span>  <span class="err">✔</span> <span class="no">DevToolsSecurity</span> <span class="n">is</span> <span class="n">enabled</span><span class="o">.</span>
</span><span class='line'><span class="n">info</span> <span class="no">AppiumDoctor</span>  <span class="err">✔</span> <span class="no">The</span> <span class="no">Authorization</span> <span class="no">DB</span> <span class="n">is</span> <span class="n">set</span> <span class="n">up</span> <span class="n">properly</span><span class="o">.</span>
</span><span class='line'><span class="n">info</span> <span class="no">AppiumDoctor</span>  <span class="err">✔</span> <span class="no">The</span> <span class="no">Node</span><span class="o">.</span><span class="n">js</span> <span class="n">binary</span> <span class="n">was</span> <span class="n">found</span> <span class="ss">at</span><span class="p">:</span> <span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">node</span>
</span><span class='line'><span class="n">info</span> <span class="no">AppiumDoctor</span>  <span class="err">✔</span> <span class="no">HOME</span> <span class="n">is</span> <span class="n">set</span> <span class="ss">to</span><span class="p">:</span> <span class="sr">/Users/xu</span><span class="n">yao</span>
</span><span class='line'><span class="n">info</span> <span class="no">AppiumDoctor</span>  <span class="err">✔</span> <span class="no">ANDROID_HOME</span> <span class="n">is</span> <span class="n">set</span> <span class="ss">to</span><span class="p">:</span> <span class="sr">/Users/xu</span><span class="n">yao</span><span class="o">/</span><span class="no">Downloads</span><span class="o">/</span><span class="n">android</span><span class="o">-</span><span class="n">sdk</span><span class="o">-</span><span class="n">macosx</span>
</span><span class='line'><span class="n">info</span> <span class="no">AppiumDoctor</span>  <span class="err">✔</span> <span class="no">JAVA_HOME</span> <span class="n">is</span> <span class="n">set</span> <span class="ss">to</span><span class="p">:</span> <span class="sr">/Library/</span><span class="no">Java</span><span class="o">/</span><span class="no">JavaVirtualMachines</span><span class="o">/</span><span class="n">jdk1</span><span class="o">.</span><span class="mi">8</span><span class="o">.</span><span class="mo">0_71</span><span class="o">.</span><span class="n">jdk</span><span class="o">/</span><span class="no">Contents</span><span class="o">/</span><span class="no">Home</span>
</span><span class='line'><span class="n">info</span> <span class="no">AppiumDoctor</span>  <span class="err">✔</span> <span class="n">adb</span> <span class="n">exists</span> <span class="ss">at</span><span class="p">:</span> <span class="sr">/Users/xu</span><span class="n">yao</span><span class="o">/</span><span class="no">Downloads</span><span class="o">/</span><span class="n">android</span><span class="o">-</span><span class="n">sdk</span><span class="o">-</span><span class="n">macosx</span><span class="o">/</span><span class="n">platform</span><span class="o">-</span><span class="n">tools</span><span class="o">/</span><span class="n">adb</span>
</span><span class='line'><span class="n">info</span> <span class="no">AppiumDoctor</span>  <span class="err">✔</span> <span class="n">android</span> <span class="n">exists</span> <span class="ss">at</span><span class="p">:</span> <span class="sr">/Users/xu</span><span class="n">yao</span><span class="o">/</span><span class="no">Downloads</span><span class="o">/</span><span class="n">android</span><span class="o">-</span><span class="n">sdk</span><span class="o">-</span><span class="n">macosx</span><span class="o">/</span><span class="n">tools</span><span class="o">/</span><span class="n">android</span>
</span><span class='line'><span class="n">info</span> <span class="no">AppiumDoctor</span>  <span class="err">✔</span> <span class="n">emulator</span> <span class="n">exists</span> <span class="ss">at</span><span class="p">:</span> <span class="sr">/Users/xu</span><span class="n">yao</span><span class="o">/</span><span class="no">Downloads</span><span class="o">/</span><span class="n">android</span><span class="o">-</span><span class="n">sdk</span><span class="o">-</span><span class="n">macosx</span><span class="o">/</span><span class="n">tools</span><span class="o">/</span><span class="n">emulator</span>
</span><span class='line'><span class="n">info</span> <span class="no">AppiumDoctor</span> <span class="c1">### Diagnostic completed, no fix needed. ###</span>
</span><span class='line'><span class="n">info</span> <span class="no">AppiumDoctor</span>
</span><span class='line'><span class="n">info</span> <span class="no">AppiumDoctor</span> <span class="no">Everything</span> <span class="n">looks</span> <span class="n">good</span><span class="p">,</span> <span class="n">bye!</span>
</span><span class='line'><span class="n">info</span> <span class="no">AppiumDoctor</span>
</span></code></pre></td></tr></table></div></figure>


<p>好了以上就是安装appium的步骤，安装好，就可以启动了，启动后的界面如下
<img src="http://7xjibn.com1.z0.glb.clouddn.com/CDF57F68-BBAE-496C-B12D-DA3F69B8A77D.png" alt="CDF57F68-BBAE-496C-B12D-DA3F69B8A77D.png" /></p>

<h4>iOS模拟器/真机信息配置</h4>

<p>正常情况下apple的包是.ipa文件，那里因为所有的ios设备使用的都的ARM处理器，但是我们现在配置的是模拟器的设备，而模拟器是基于Intel处理器,处理架构不一样，所以在编辑生成包的时候请选择.app文件，请看下图的配置参数
<img src="http://7xjibn.com1.z0.glb.clouddn.com/apple-setting.png" alt="apple-setting" />
App path就是apple包的路径<br/>
BunleID就是苹果开发的bundle identifier，仅在真机测试时勾上并填写<br/>
UDID苹果设备的唯一ID，仅在真机测试时勾上并填写<br/>
Force Device 要测试的iphone设备
Platform Version 要测试的iphone的版本好(设备和版本号一定要匹配)
以上配置好后，点击launch按钮，启动appium服务，启动成功后，可看到如下信息</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="no">MJSONWP</span><span class="o">]</span> <span class="no">Responding</span> <span class="n">to</span> <span class="n">client</span> <span class="n">with</span> <span class="n">driver</span><span class="o">.</span><span class="n">getStatus</span><span class="p">()</span> <span class="ss">result</span><span class="p">:</span> <span class="p">{</span><span class="s2">&quot;build&quot;</span><span class="p">:{</span><span class="s2">&quot;version&quot;</span><span class="ss">:&quot;1.5.3&quot;</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="o">[</span><span class="no">HTTP</span><span class="o">]</span> <span class="o">&lt;--</span> <span class="no">GET</span> <span class="sr">/wd/</span><span class="n">hub</span><span class="o">/</span><span class="n">status</span> <span class="mi">200</span> <span class="mi">26</span> <span class="n">ms</span> <span class="o">-</span> <span class="mi">83</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下来点击那个类似搜索的按钮来启动client端<br/>
如果启动的时候报如下错误</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="no">MJSONWP</span><span class="o">]</span> <span class="no">Encountered</span> <span class="n">internal</span> <span class="n">error</span> <span class="n">running</span> <span class="ss">command</span><span class="p">:</span> <span class="ss">Error</span><span class="p">:</span> <span class="no">Could</span> <span class="ow">not</span> <span class="n">find</span> <span class="n">a</span> <span class="n">device</span> <span class="n">to</span> <span class="n">launch</span><span class="o">.</span> <span class="no">You</span> <span class="n">requested</span> <span class="s1">&#39;iPhone 6 (9.3 Simulator)&#39;</span><span class="p">,</span>
</span><span class='line'><span class="n">but</span> <span class="n">the</span> <span class="n">available</span> <span class="n">devices</span> <span class="ss">were</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;Resizable iPad (8.2 Simulator) [341C7D49-B181-46B8-AB61-CF644C3250F1]&quot;</span><span class="p">,</span><span class="s2">&quot;Resizable iPhone (8.2 Simulator) [411D39CB-6DB6-41A9-9E6C-89CFDED27B69]&quot;</span><span class="p">,</span><span class="s2">&quot;iPad 2 (8.2 Simulator) [B3780274-2AE7-4677-831A-17CDDC92F2A5]&quot;</span><span class="p">,</span><span class="s2">&quot;iPad Air (8.2 Simulator) [C675C17C-9B79-4E57-B877-732A441F8DDA]&quot;</span><span class="p">,</span><span class="s2">&quot;iPad Retina (8.2 Simulator) [1C9FF2EF-A643-4D27-9268-4C3A4ADD8710]&quot;</span><span class="p">,</span><span class="s2">&quot;iPhone 4s (8.2 Simulator) [0AB005A2-63AD-44F8-AE80-8BFBB21BCDD2]&quot;</span><span class="p">,</span><span class="s2">&quot;iPhone 5 (8.2 Simulator) [15765CF4-96B1-4826-B397-6E23658AC89A]&quot;</span><span class="p">,</span><span class="s2">&quot;iPhone 5s (8.2 Simulator) </span>
</span></code></pre></td></tr></table></div></figure>


<p>那是因为你的设备和版本不对的原因，仔细看下log就发现了，改一下设备和版本信息重新启动<br/>
启动成功后出现如下画面，启动成功后会帮你打开Appium Inspector，可以使用Inspector查找组件路径，自此苹果的设备就配置成功了
<img src="http://7xjibn.com1.z0.glb.clouddn.com/iphone_5s_device.png" alt="iphone5" />
<img src="http://7xjibn.com1.z0.glb.clouddn.com/1796624-36371e4f4fe1beb2.jpeg" alt="Appium Inspector GUI" /></p>

<h5>参考资料</h5>

<p><a href="http://appium.io/getting-started.html?lang=zh">http://appium.io/getting-started.html?lang=zh</a><br/>
<a href="https://ruby-china.org/topics/30085">https://ruby-china.org/topics/30085</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[App自动化测试平台搭建记录之什么是appium]]></title>
    <link href="http://xuyao.club/blog/2016/07/09/app-test-automation-platform-building-record-of-what-is-appium/"/>
    <updated>2016-07-09T17:06:02+08:00</updated>
    <id>http://xuyao.club/blog/2016/07/09/app-test-automation-platform-building-record-of-what-is-appium</id>
    <content type="html"><![CDATA[<h4>前言</h4>

<p>目前我们的项目关于测试这块还是处于很初级阶段，rails后端的rspec也写的很少，app方面完全靠手动测试，基于此情况，我们决定搭建一个自动化测试平台，期望目标是移动端ios和android及h5每天定时拉取最新代码，进行部署，打包，最后进行回归测试，生成测试报告发送给测试人员，
最后流程如下所示</p>

<!-- more -->


<p><img src="http://7xjibn.com1.z0.glb.clouddn.com/appium%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%E5%9B%BE%20%281%29.png" alt="img" /></p>

<h4>为什么选择appium作为自动化测试框架</h4>

<ul>
<li>使用标准的api形式，能够同时支持ios，android，h5,接口保持统一，减少开发维护成本</li>
<li>你可以使用任何你喜欢的开发工具，及支持多种脚本语言(ruby/python/java/php/javascript/C#/ Clojure/Perl)</li>
<li>你可以使用任何的测试框架

<h4>What is the Appium</h4>

<p>具体什么是appium呢，引用了官方的一段话：
Appium is an open source test automation framework for use with native, <a href="http://appium.io/slate/en/master/#hybrid.md">hybrid</a> and mobile web apps.</p></li>
</ul>


<h4>Appium Concepts（appium理念）</h4>

<p><strong>Client/Server 设计风格</strong> <br/>
   Appium本质是一个核心webserver,暴露一些REST API与手机设备交互, 而且之间通信是一标准的HTTP协议，client的test code语言几乎现在主流的语言都支持，写测试用例比较方便，下图是它servre端的GUI</p>

<p><img src="http://7xjibn.com1.z0.glb.clouddn.com/CDF57F68-BBAE-496C-B12D-DA3F69B8A77D.png" alt="CDF57F68-BBAE-496C-B12D-DA3F69B8A77D.png" /></p>

<p><strong>Session(会话)</strong><br/>
  自动化每次都会在一个会话里面进行，client每次都会发送一个post /session 请求，服务器根据客户端信息起一个automation session和返回一个session ID用于后续操作</p>

<p><strong>Desired Capabilities</strong><br/>
  一组hash参数，告诉server端我们需要启动一个的怎样automation session,不同设备参数不同
这是iOs一个demo</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">capabilities</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;appium-version&#39;</span><span class="p">:</span> <span class="s1">&#39;1.0&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;platformName&#39;</span><span class="p">:</span> <span class="s1">&#39;iOS&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;platformVersion&#39;</span><span class="p">:</span> <span class="s1">&#39;8.2&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;deviceName&#39;</span><span class="p">:</span> <span class="s1">&#39;iPhone 6&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;app&#39;</span><span class="p">:</span> <span class="s2">&quot;/Users/xuyao/Downloads/Cloudoc-Patient.app&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这是android的样本</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">capabilities</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;appium-version&#39;</span><span class="p">:</span> <span class="s1">&#39;1.0&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;platformName&#39;</span><span class="p">:</span> <span class="s1">&#39;Android&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;platformVersion&#39;</span><span class="p">:</span> <span class="s1">&#39;5.1&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;deviceName&#39;</span><span class="p">:</span> <span class="s1">&#39;test&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;app&#39;</span><span class="p">:</span> <span class="s1">&#39;/Users/xuyao/Downloads/Yydys0627.apk&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Appium Server</strong><br/>
  server端是用node.js写的</p>

<p><strong>Appium Clients</strong><br/>
  客户端的库有很多( Java, Ruby, Python, PHP, JavaScript, and C#)，这些都对WebDriver封装扩展过,所以不需要找个WebDriver client来做这些东西,如果使用ruby语言来写脚本，ruby里有个<a href="https://rubygems.org/gems/appium_lib">appium_lib</a> gem，里面集成了很多现成的方法，可以再安装一个<a href="https://github.com/appium/ruby_console">appium_console</a>，直接打开console进行调试</p>

<h4>Appium Inspector</h4>

<p>在控件台里面获取页面元素比较麻烦，往往需要一直定位，Appium提供了一个比较友好的GUI给我们操作，而且操作起来还容易，大大减少了我们查找元素的时间
<img src="http://7xjibn.com1.z0.glb.clouddn.com/1796624-36371e4f4fe1beb2.jpeg" alt="Appium Inspector GUI" /></p>

<h6>参考资料</h6>

<p><a href="http://appium.io/">http://appium.io/</a><br/>
<a href="https://github.com/appium/ruby_console">https://github.com/appium/ruby_console</a><br/>
<a href="https://github.com/appium/ruby_lib">https://github.com/appium/ruby_lib</a><br/>
<a href="https://ruby-china.org/topics/30074">https://ruby-china.org/topics/30074</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About Sso in Rails]]></title>
    <link href="http://xuyao.club/blog/2016/04/06/about-sso-in-rails/"/>
    <updated>2016-04-06T16:19:32+08:00</updated>
    <id>http://xuyao.club/blog/2016/04/06/about-sso-in-rails</id>
    <content type="html"><![CDATA[<h3>前言</h3>

<p>目前业务越来越多，很多业务可能需要拆分成不同的应用，不同的应用之间如何互享用户信息，这时就需要用到单点登录(Single Sign On），简称为 SSO。</p>

<p>这里主要针对doorkeeper作讲解</p>

<!-- more -->


<p><img src="http://i2.piimg.com/285bc33bd4eab4b1.png" alt="查看图" /></p>

<h3>需要用到的插件</h3>

<ul>
<li><a href="https://github.com/doorkeeper-gem/doorkeeper">Doorkeeper</a>  (<a href="http://oauth.net/2/">Oauth 2.0</a>协议的认证授权服务)</li>
<li>Grape (提供 Resource Server APi)</li>
<li>Devise (提供登录，暂时可能用不到)</li>
</ul>


<h3>需要用到的角色</h3>

<ul>
<li>Resource Owner (用户角色)</li>
<li>Clients (第三方角色)</li>
<li>Authorization Server (授权服务)</li>
<li>Resource Server (用户信息读写服务,api形式)<br/>
详情可查看<a href="https://github.com/jeansfish/RFC6749.zh-cn/blob/master/Section01/1.1.md">RFC6749</a></li>
</ul>


<h3>Authorization Server构建</h3>

<p>安装doorkeeper及初始模型的建立</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;doorkeeper&#39;</span>
</span><span class='line'><span class="c1">#bundle install</span>
</span><span class='line'><span class="n">rails</span> <span class="n">generate</span> <span class="ss">doorkeeper</span><span class="p">:</span><span class="n">install</span>
</span><span class='line'><span class="n">rails</span> <span class="n">generate</span> <span class="ss">doorkeeper</span><span class="p">:</span><span class="n">migration</span>
</span><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>


<p>配置doorkeeper来提供resource_owner的model及授权</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Doorkeeper</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">resource_owner_authenticator</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">Patient</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="n">session</span><span class="o">[</span><span class="ss">:patient_id</span><span class="o">]</span><span class="p">,</span> <span class="ss">authentication_token</span><span class="p">:</span> <span class="n">session</span><span class="o">[</span><span class="ss">:patient_auth_token</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">first</span> <span class="o">||</span> <span class="n">redirect_to</span><span class="p">(</span><span class="n">login_url</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面操作会生成下面几张表</p>

<ul>
<li>oauth_applications  第三方(clients)表</li>
<li>oauth_access_grants 用户授权code表</li>
<li>oauth_access_tokens 授权服务token表</li>
</ul>


<h3>添加 Applications</h3>

<p>授权前需要添加第三方应用的信息，doorkeeper提供了一个增加Clients的功能
<a href="http://localhost:3001/oauth/applications">点击查看</a></p>

<h3>Authorization Grant Code Flow</h3>

<ul>
<li> Resource Owner请求Client的Redirection URI</li>
<li> Client转到Authorization Server</li>
<li> Resource Owner 确认授权</li>
<li> Authorization Server验证用户</li>
<li> Authorization Server返回Authorization Code</li>
<li> Resource Owner返回Redirection URI &amp; Authorization Code</li>
<li> Client拿到Authorization Code请求Access Token</li>
</ul>


<p>具体<a href="https://tools.ietf.org/ht%EF%BC%8Cml/draft-ietf-oauth-v2-22#section-4.1">点击查看</a></p>

<h3>获取Access Token</h3>

<p>上面介绍了oauth 2的授权流程，得到Client信息后，就可以去Authorization Server获取Token,通过调用/oauth/token接口获得Token<br/>
具体可以看  <a href="http://localhost:3001/oauth/applications">模拟操作</a></p>

<h3>Resource Server构建</h3>

<p>使用grape作Resource Server的接口,暂时可能需要如下接口</p>

<p>1，获取用户信息<br/>
2，修改用户信息<br/>
查看swagger<a href="http://localhost:3001/documentation/api_v1">模拟操作</a></p>

<h3>说明及问题</h3>

<ol>
<li>把Authorization Server部署在哪里

<blockquote><p>部署在主项目里面，这样可以省去Authorization Server的登录，因为App登录后，Authorization Server可以通过session获得用户信息</p></blockquote></li>
<li>目前只在App内授权，不提供外部登录

<blockquote><p>我们的其它应用都是App内的页面，而且在外部有些可能不能用，所以在App里授权</p></blockquote></li>
<li>Api部分可以不做验证</li>
</ol>


<h4>参考资料</h4>

<p><a href="https://github.com/doorkeeper-gem/doorkeeper">https://github.com/doorkeeper-gem/doorkeeper</a><br/>
<a href="https://github.com/sethherr/grape-doorkeeper">https://github.com/sethherr/grape-doorkeeper</a><br/>
<a href="https://blog.yorkxin.org/posts/2013/10/10/oauth2-tutorial-grape-api-doorkeeper/">https://blog.yorkxin.org/posts/2013/10/10/oauth2-tutorial-grape-api-doorkeeper/</a><br/>
<a href="http://tools.ietf.org/html/rfc6749">http://tools.ietf.org/html/rfc6749</a> <br/>
<a href="https://github.com/jeansfish/RFC6749.zh-cn">https://github.com/jeansfish/RFC6749.zh-cn</a><br/>
<a href="https://ruby-china.org/topics/15396">https://ruby-china.org/topics/15396</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About Rails Cache]]></title>
    <link href="http://xuyao.club/blog/2016/03/24/about-rails-cache/"/>
    <updated>2016-03-24T10:05:39+08:00</updated>
    <id>http://xuyao.club/blog/2016/03/24/about-rails-cache</id>
    <content type="html"><![CDATA[<p>在项目中经常会存储一些短时候内比较重要的数据，或者一些临时数据，这种数据以前一般我都把它
存到redis中，后来想想如果不是很重要的临时数据就没必要往redis里放了，直接用cache可能更方便</p>

<h3>ActiveSupport::Cache::Store</h3>

<p>它是一个抽象类，有很多cache store的实现
rails中的这个类提供了和缓存交互的很多基本的方法，包括(read,write,delete,exist?,fetch)，下面说下具体实现</p>

<h3>ActiveSupport::Cache::FileStore</h3>

<p>先说一下FileStore,这种存储方式Rails默认的存储方式，他是将数据存储到系统文件,默认将文件存储到项目的/tmp/cache下面，你可以修改它的存储路径</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">cache_store</span> <span class="o">=</span> <span class="ss">:file_store</span><span class="p">,</span> <span class="s2">&quot;/path/to/cache/directory&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面说FileStore是Rails默认的存储方式，看下面这句代码就知道了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">cache</span><span class="o">.</span><span class="n">class</span>  <span class="o">=&gt;</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Cache</span><span class="o">::</span><span class="no">FileStore</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<p>cache有几种常用的方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">cache</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">,</span><span class="s2">&quot;peter&quot;</span><span class="p">)</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">cache</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)</span>  <span class="o">=&gt;</span> <span class="s2">&quot;peter&quot;</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">cache</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s2">&quot;age&quot;</span><span class="p">)</span>  <span class="o">=&gt;</span> <span class="kp">nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>cache中的key都是string型，而且区分大小写的，Hash和数据也或以当作key,上面的代码的key也可以用hash表示</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">cache</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="ss">:name</span><span class="p">)</span>  <span class="o">=&gt;</span> <span class="s2">&quot;peter&quot;</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">cache</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="ss">:name</span><span class="p">)</span> <span class="o">==</span> <span class="no">Rails</span><span class="o">.</span><span class="n">cache</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)</span>  <span class="o">=&gt;</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果你的cache是和其它程序公用的存储，你可以给他定义一个namespace，一旦namespace定义，就会在key前面加了个前缀
其它一些参数
:compress 是否压缩缓存，
:compress_threshold 和compress一起使用，设定一个阈值，低于这个值就不压缩缓存。默认为 16 KB。
:expires_in 为缓存记录设定一个过期时间，单位为秒，过期后把记录从缓存中删除。</p>

<h3>ActiveSupport::Cache::MemoryStore</h3>

<p>这种存储方式是把数据存储在内存中，而且存储空间的大小由:size决定，默认为32M，如果超出分配的大小，系统会清理缓存，把最不常使用的记录删除。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cache</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Cache</span><span class="o">::</span><span class="no">MemoryStore</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">cache</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">,</span><span class="s2">&quot;peter&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">cache</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)</span>  <span class="o">=&gt;</span> <span class="s2">&quot;peter&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ActiveSupport::Cache::MemCacheStore</h3>

<p>这种存储方式使用 Danga 开发的 memcached 服务器，为程序提供一个中心化的缓存存储。Rails 默认使用附带安装的 dalli gem 实现这种存储方式。这是目前在生产环境中使用最广泛的缓存存储方式，可以提供单个缓存存储，或者共享的缓存集群，性能高，冗余度低。</p>

<p>初始化时要指定集群中所有 memcached 服务器的地址。如果没有指定地址，默认运行在本地主机的默认端口上，这对大型网站来说不是个好主意。</p>

<p>在这种缓存存储中使用 write 和 fetch 方法还可指定两个额外的选项，充分利用 memcached 的特有功能。指定 :raw 选项可以直接把没有序列化的数据传给 memcached 服务器。在这种类型的数据上可以使用 memcached 的原生操作，例如 increment 和 decrement。如果不想让 memcached 覆盖已经存在的记录，可以指定 :unless_exist 选项。
上面的这种我也没用过，只是摘了别人一段话来补补。。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby中include和extend的比较]]></title>
    <link href="http://xuyao.club/blog/2015/06/29/include-vs-extend-in-ruby/"/>
    <updated>2015-06-29T12:21:35+08:00</updated>
    <id>http://xuyao.club/blog/2015/06/29/include-vs-extend-in-ruby</id>
    <content type="html"><![CDATA[<p>本文翻译,改编自<a href="http://www.railstips.org/blog/archives/2009/05/15/include-vs-extend-in-ruby/">Include vs Extend in Ruby</a></p>

<p>在类中引用一个模块,有两种方式,一种是include,另一种是extend,两种的大致区别就是:<br/>
<strong><em>include是给class增加一个实例方法,而extend是增加一个类方法</em>  </strong><br/>
我们看一下小例子.</p>

<!-- more -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;heyyyyoooo!&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Bar</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># heyyyyoooo!</span>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># NoMethodError: undefined method ‘foo’ for Bar:Class</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Baz</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">Foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Baz</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># heyyyyoooo!</span>
</span><span class='line'><span class="no">Baz</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># NoMethodError: undefined method ‘foo’ for #&lt;Baz:0x1e708&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>如你所见,include生成了一个类的实例foo方法,而extend生成了一个类本身的类方法.</p>

<h5>Include 例子</h5>

<p>如果你想了解更多module之间使用include共享方法,你可以阅读我另一则文章在<a href="http://railstips.org/2009/4/20/how-to-add-simple-permissions-into-your-simple-app-also-thoughtbot-rules">how I added simple permissions</a>,那篇文章中permissions模块被好几个models引入,所以可以共享方法,这就是我要说的,所以你想了解更多可以查看那篇文章</p>

<h5>一个普遍的共识</h5>

<p>虽然include是增加一个实例方法,但是有一个普遍的共识,你以后会明白在ruby中使用include即可以增加类方法也可以增加实例方法,原因就是include有一个self.included的钩子方法,你可以用它来修改类中对于模块的引入,据我所知,extend没有钩子方法(这是作者错误的想法,见下面说明),不过这是有争议的,但是因为经常使用所以我想我会提到它,让我们看个小例子</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="no">ClassMethods</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">bar</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s1">&#39;class method&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;instance method&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Baz</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Baz</span><span class="o">.</span><span class="n">bar</span> <span class="c1"># class method</span>
</span><span class='line'><span class="no">Baz</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># instance method</span>
</span><span class='line'><span class="no">Baz</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># NoMethodError: undefined method ‘foo’ for Baz:Class</span>
</span><span class='line'><span class="no">Baz</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">bar</span> <span class="c1"># NoMethodError: undefined method ‘bar’ for #&lt;Baz:0x1e3d4&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是rails现在引入了<a href="http://api.rubyonrails.org/classes/ActiveSupport/Concern.html">ActiveSupport::Concern</a>,上面的方法就可以写成这样</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Concern</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">bar</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s1">&#39;class method&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;instance method&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Baz</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Baz</span><span class="o">.</span><span class="n">bar</span> <span class="c1"># class method</span>
</span><span class='line'><span class="no">Baz</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># instance method</span>
</span><span class='line'><span class="no">Baz</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># NoMethodError: undefined method ‘foo’ for Baz:Class</span>
</span><span class='line'><span class="no">Baz</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">bar</span> <span class="c1"># NoMethodError: undefined method ‘bar’ for #&lt;Baz:0x1e3d4&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h5>说明</h5>

<p>上面原作者说extend没有hook是错误的,extend其实有一个叫self.extended的方法,作用和include中的self.included是差不多的,可看下面的例子</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">extended</span><span class="p">(</span><span class="n">klass</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;extended by class </span><span class="si">#{</span><span class="n">klass</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Baz</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">Foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="o">=&gt;</span> <span class="n">extended</span> <span class="n">by</span> <span class="k">class</span> <span class="nc">Baz</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About Me]]></title>
    <link href="http://xuyao.club/blog/2015/06/05/about-me-with-ruby-code/"/>
    <updated>2015-06-05T10:49:54+08:00</updated>
    <id>http://xuyao.club/blog/2015/06/05/about-me-with-ruby-code</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Person</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:birthday</span><span class="p">,</span> <span class="ss">:gender</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span><span class="n">birthday</span><span class="p">,</span><span class="n">gender</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@name</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>    <span class="vi">@birthday</span> <span class="o">=</span> <span class="n">birthday</span>
</span><span class='line'>    <span class="vi">@gender</span> <span class="o">=</span> <span class="n">gender</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">company</span><span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">company</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">position</span><span class="o">=</span> <span class="n">position</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">position</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hobby</span> <span class="o">*</span><span class="n">arg</span>
</span><span class='line'>    <span class="s2">&quot;I like </span><span class="si">#{</span><span class="n">arg</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">me</span> <span class="o">=</span> <span class="no">Person</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;徐耀&quot;</span><span class="p">,</span><span class="s2">&quot;1991-02-03&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">me</span><span class="o">.</span><span class="n">nickname</span> <span class="o">=</span> <span class="sx">%W(老徐 徐逗逗)</span>
</span><span class='line'><span class="n">me</span><span class="o">.</span><span class="n">company</span><span class="o">=</span> <span class="s2">&quot;上海微客来软件技术有限公司&quot;</span>
</span><span class='line'><span class="c1">#TODO update at 2015-7-15</span>
</span><span class='line'><span class="n">me</span><span class="o">.</span><span class="n">company</span><span class="o">=</span> <span class="s2">&quot;苏州医云健康有限公司&quot;</span>
</span><span class='line'><span class="n">me</span><span class="o">.</span><span class="n">position</span> <span class="o">=</span> <span class="s2">&quot;Ruby Engineer&quot;</span>
</span><span class='line'><span class="n">me</span><span class="o">.</span><span class="n">hobby</span> <span class="s2">&quot;coding&quot;</span><span class="p">,</span><span class="s2">&quot;reading&quot;</span><span class="p">,</span><span class="s2">&quot;music&quot;</span><span class="p">,</span><span class="s2">&quot;traveling&quot;</span><span class="p">,</span><span class="s2">&quot;grils&quot;</span>
</span><span class='line'><span class="n">me</span><span class="o">.</span><span class="n">weibo</span> <span class="o">=</span> <span class="s2">&quot;http://weibo.com/1676361452&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Understand Rails Virtual Attributes]]></title>
    <link href="http://xuyao.club/blog/2015/06/04/how-to-understand-rails-virtual-attributes/"/>
    <updated>2015-06-04T16:37:50+08:00</updated>
    <id>http://xuyao.club/blog/2015/06/04/how-to-understand-rails-virtual-attributes</id>
    <content type="html"><![CDATA[<h4>在网上看到关于rails  virtual attributes 的例子,得觉挺好玩的,自己动手试一下,好叼</h4>

<p>有时候在一张表里面有两个字段,但是实际表单里其实只有一个文本框输入,比如老外的名字分first_name last_name,
在表里面是分开保存的,但其实是在一个文本框中输入的,这里使用virtal attriubtes最恰当不过了,看表结构</p>

<!-- more -->


<p>表里有first_name和full_name两个属性</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CreateTeachers</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:teachers</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:first_name</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:last_name</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:age</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:gender</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:mobile</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p> 但是有时候在页面上不需要用两个文本框,只要一个full_name就ok</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= form_for(@teacher) do |f| %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">  #只在有一个full_name 的文本框就可以</span>
</span><span class='line'><span class="sx">  &lt;div class=</span><span class="s2">&quot;field&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">%= f.label :full_name %&gt;&lt;br&gt;</span>
</span><span class='line'><span class="sx">    &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:full_name</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;/div&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;field&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">%= f.label :age %&gt;&lt;br&gt;</span>
</span><span class='line'><span class="sx">    &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">number_field</span> <span class="ss">:age</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;/div&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;field&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">%= f.label :gender %&gt;&lt;br&gt;</span>
</span><span class='line'><span class="sx">    &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">number_field</span> <span class="ss">:gender</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;/div&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;field&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">%= f.label :mobile %&gt;&lt;br&gt;</span>
</span><span class='line'><span class="sx">    &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:mobile</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;/div&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;actions&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">submit</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;/div&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>model层可以这样写</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Teacher</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">full_name</span>
</span><span class='line'>      <span class="o">[</span><span class="n">first_name</span><span class="p">,</span> <span class="n">last_name</span><span class="o">].</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>  
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">full_name</span><span class="o">=</span> <span class="p">(</span><span class="n">full_name</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">split</span> <span class="o">=</span> <span class="n">full_name</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">first_name</span> <span class="o">=</span> <span class="nb">split</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">last_name</span> <span class="o">=</span> <span class="nb">split</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>  
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里full_name就是一个虚拟属性(virtual attributes)
上面两个方法其实就是getter和setter(java中有这种概念)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 中alias Alias_method Alias_method_chain的使用]]></title>
    <link href="http://xuyao.club/blog/2015/05/28/ruby-alias-methods/"/>
    <updated>2015-05-28T22:03:17+08:00</updated>
    <id>http://xuyao.club/blog/2015/05/28/ruby-alias-methods</id>
    <content type="html"><![CDATA[<h5>首先看一下alias的用法，上一个实例是明了</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Dog</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">say</span>
</span><span class='line'>          <span class="nb">puts</span>  <span class="s2">&quot;say hello&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'> <span class="k">alias</span> <span class="ss">:wang</span> <span class="ss">:say</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">dog</span> <span class="o">=</span> <span class="no">Dog</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">dog</span><span class="o">.</span><span class="n">wang</span>
</span><span class='line'>
</span><span class='line'><span class="o">=&gt;</span> <span class="n">say</span> <span class="n">hello</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>在类中可以将一个实例方法重新命名,注意的是新方法在前面，用空格格开</p>

<h5>alias_method的用法，</h5>

<p>和alias一样，只是他是module的一个私有方法，而且它的方法名可以是字符中，而alias不行，看代码</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Dog</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">say</span>
</span><span class='line'>          <span class="nb">puts</span>  <span class="s2">&quot;say hello&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">alias_method</span> <span class="s2">&quot;wang&quot;</span><span class="p">,</span> <span class="s2">&quot;say&quot;</span>
</span><span class='line'><span class="c1">#alias_method :wang, :say</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Animal</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Dog</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="no">Anima</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">wang</span>
</span><span class='line'>
</span><span class='line'><span class="o">=&gt;</span><span class="n">say</span> <span class="n">hello</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h5>alias_method_chain 是ActiveSupport的一个公有实例方法，用法和alias_method是一样的，这里不举例，最后附上alias_method_chain的源码</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">alias_method_chain</span><span class="p">(</span><span class="n">target</span><span class="p">,</span> <span class="n">feature</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># Strip out punctuation on predicates or bang methods since    </span>
</span><span class='line'>  <span class="c1"># e.g. target?_without_feature is not a valid method name.    </span>
</span><span class='line'>  <span class="n">aliased_target</span><span class="p">,</span> <span class="n">punctuation</span> <span class="o">=</span> <span class="n">target</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="sr">/([?!=])$/</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">),</span> <span class="vg">$1</span>
</span><span class='line'>  <span class="k">yield</span><span class="p">(</span><span class="n">aliased_target</span><span class="p">,</span> <span class="n">punctuation</span><span class="p">)</span> <span class="k">if</span> <span class="nb">block_given?</span>
</span><span class='line'>  <span class="n">with_method</span><span class="p">,</span> <span class="n">without_method</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">aliased_target</span><span class="si">}</span><span class="s2">_with_</span><span class="si">#{</span><span class="n">feature</span><span class="si">}#{</span><span class="n">punctuation</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">aliased_target</span><span class="si">}</span><span class="s2">_without_</span><span class="si">#{</span><span class="n">feature</span><span class="si">}#{</span><span class="n">punctuation</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">alias_method</span> <span class="n">without_method</span><span class="p">,</span> <span class="n">target</span>
</span><span class='line'>  <span class="n">alias_method</span> <span class="n">target</span><span class="p">,</span> <span class="n">with_method</span>
</span><span class='line'>  <span class="k">case</span>
</span><span class='line'>    <span class="k">when</span> <span class="nb">public_method_defined?</span><span class="p">(</span><span class="n">without_method</span><span class="p">)</span>
</span><span class='line'>      <span class="kp">public</span> <span class="n">target</span>
</span><span class='line'>    <span class="k">when</span> <span class="nb">protected_method_defined?</span><span class="p">(</span><span class="n">without_method</span><span class="p">)</span>
</span><span class='line'>      <span class="kp">protected</span> <span class="n">target</span>
</span><span class='line'>    <span class="k">when</span> <span class="nb">private_method_defined?</span><span class="p">(</span><span class="n">without_method</span><span class="p">)</span>
</span><span class='line'>    <span class="kp">private</span> <span class="n">target</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Everybody]]></title>
    <link href="http://xuyao.club/blog/2015/05/26/my-first-post/"/>
    <updated>2015-05-26T17:29:27+08:00</updated>
    <id>http://xuyao.club/blog/2015/05/26/my-first-post</id>
    <content type="html"><![CDATA[<p>hello everybody, this is my first post, I'am very happy, bescuse it is successful.</p>

<p>如果想了解微信相关开发的东西请到我的<a href="http://blog.sina.com.cn/xuyao90">新浪博客</a></p>
]]></content>
  </entry>
  
</feed>
